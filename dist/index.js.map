{"version":3,"sources":["../lib/index.ts"],"names":["client","Axios","create","headers","requesttoken","interceptors","request","use","config","method","toUpperCase","console","log","error","Promise","reject","cancelableClient","Object","assign","CancelToken","isCancel","token","defaults"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;;;AAOA,IAAMA,MAAqB,GAAGC,eAAMC,MAAN,CAAa;AAC1CC,EAAAA,OAAO,EAAE;AACRC,IAAAA,YAAY,EAAE;AADN;AADiC,CAAb,CAA9B,C,CAKA;;;AACAJ,MAAM,CAACK,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CAAgC,UAAUC,MAAV,EAAkB;AACjD,MAAGA,MAAM,CAACC,MAAV,EAAkB;AACjB,QAAIA,MAAM,GAAGD,MAAM,CAACC,MAAP,CAAcC,WAAd,EAAb,CADiB,CAEjB;;AACA,QAAGD,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,KAAhC,IAAyCA,MAAM,KAAK,MAAvD,EAA+D;AAC9DD,MAAAA,MAAM,CAACL,OAAP,CAAe,uBAAf,IAA0CM,MAA1C;AACAD,MAAAA,MAAM,CAACC,MAAP,GAAgB,MAAhB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,MAAM,CAACL,OAAtC;AACA;AACD;;AACD,SAAOK,MAAP;AACE,CAXH,EAWK,UAAUK,KAAV,EAAiB;AACrB,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CAbD;AAcA,IAAMG,gBAAyC,GAAGC,MAAM,CAACC,MAAP,CAAclB,MAAd,EAAsB;AACvEmB,EAAAA,WAAW,EAAElB,eAAMkB,WADoD;AAEvEC,EAAAA,QAAQ,EAAEnB,eAAMmB;AAFuD,CAAtB,CAAlD;AAKA,gCAAqB,UAAAC,KAAK;AAAA,SAAIrB,MAAM,CAACsB,QAAP,CAAgBnB,OAAhB,CAAwBC,YAAxB,GAAuCiB,KAA3C;AAAA,CAA1B;eAEeL,gB","sourcesContent":["import Axios, { AxiosInstance, CancelTokenStatic } from 'axios'\nimport { getRequestToken, onRequestTokenUpdate } from '@nextcloud/auth'\n\ninterface CancelableAxiosInstance extends AxiosInstance {\n\tCancelToken: CancelTokenStatic\n\tisCancel(value: any): boolean\n}\n\nconst client: AxiosInstance = Axios.create({\n\theaders: {\n\t\trequesttoken: getRequestToken()\n\t}\n})\n// [VWORKSPACE] Change all method such as PUT, DELETE, MOVE ... to POST\nclient.interceptors.request.use(function (config) {\n\tif(config.method) {\n\t\tlet method = config.method.toUpperCase();\n\t\t// Change all request except POST GET HEAD to POST\n\t\tif(method !== 'POST' && method !== 'GET' && method !== 'HEAD') {\n\t\t\tconfig.headers['Target-Request-Method'] = method;\n\t\t\tconfig.method = 'post';\n\t\t\tconsole.log(\"Axios overide: \", config.headers);\n\t\t}\n\t}\n\treturn config;\n  }, function (error) {\n\treturn Promise.reject(error);\n});\nconst cancelableClient: CancelableAxiosInstance = Object.assign(client, {\n\tCancelToken: Axios.CancelToken,\n\tisCancel: Axios.isCancel,\n})\n\nonRequestTokenUpdate(token => client.defaults.headers.requesttoken = token)\n\nexport default cancelableClient\n"],"file":"index.js"}